name: CI/CD Pipeline

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'

env:
  IMAGE_NAME: majidni/test-app

jobs:
  build-and-package:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel

    - name: Check for Changes
      id: check_changes
      run: |
        CHANGES=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep '^source_code/' || true)
        echo "CHANGES=$CHANGES"
        echo "CHANGES_IN_SOURCE=$CHANGES" >> $GITHUB_ENV
        echo "changes=$CHANGES" >> $GITHUB_OUTPUT

    - name: Set Image Tag
      if: steps.check_changes.outputs.changes != ''
      run: |
        IMAGE_TAG=$(git describe --tags --always)
        echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
        echo "IMAGE_LABEL=--label release-version=$IMAGE_TAG --label branch-name=${{ github.ref_name }}" >> $GITHUB_ENV

    - name: Build
      if: steps.check_changes.outputs.changes != ''
      run: |
        cd source_code
        python3 setup.py sdist

    - name: Login to Docker Hub
      if: steps.check_changes.outputs.changes != ''
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and Push Docker Image
      if: steps.check_changes.outputs.changes != ''
      uses: docker/build-push-action@v2
      with:
        context: ./source_code
        file: ./source_code/Dockerfile
        push: true
        tags: ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
        build-args: |
          ${{ env.IMAGE_LABEL }}